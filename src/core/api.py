from typing import Protocol, Dict, Any

class Engine(Protocol):
    def setup(self, cfg: Dict[str, Any]) -> None: ...
    def train_step(self, batch: Dict[str, Any]) -> Dict[str, float]: ...
    def eval_step(self, batch: Dict[str, Any]) -> Dict[str, float]: ...
    def state_dict(self) -> Dict[str, Any]: ...
    def load_state_dict(self, state: Dict[str, Any]) -> None: ...

class Strategy(Protocol):
    def attach_engine(self, engine: Engine) -> None: ...
    def on_batch(self, batch: Dict[str, Any]) -> Dict[str, float]: ...
